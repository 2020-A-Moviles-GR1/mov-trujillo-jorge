package vista;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import clases.Files;

import java.io.File;
import java.io.FileWriter;
import java.time.*;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.*;
import java.awt.Color;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.ActionEvent;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import javax.swing.filechooser.FileFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import org.jdatepicker.DateModel;
import org.jdatepicker.JDatePicker;
import java.awt.event.ActionListener;

/**
 *
 * @author Jorge
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        jScrollPane2_1_1.setFont(new Font("Tahoma", Font.PLAIN, 14));
        jScrollPane2_1.setFont(new Font("Tahoma", Font.PLAIN, 14));
        jButtonNew_1.setText("New");
        jButtonNew_1.setEnabled(false);
        jButtonNew_1.setAlignmentX(0.5f);
        jButtonSaveEx.setText("Save");
        jButtonSaveEx.setEnabled(false);
        jButtonAddEx.setText("Add");
        jButtonAddEx.setEnabled(true);
        initComponents();
    }

    static String selectedCard = "";
    static Files fl = new Files();
    static String oldCardName = "";
    static String oldExpansionName = "";

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel2.setAlignmentY(Component.TOP_ALIGNMENT);
        jPanel2.setAlignmentX(Component.LEFT_ALIGNMENT);
        jButtonAdd = new javax.swing.JButton();
        jButtonAdd.setEnabled(true);
        jButtonNew = new javax.swing.JButton();
        jButtonNew.setAlignmentX(Component.CENTER_ALIGNMENT);
        jButtonNew.setEnabled(false);
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane2.setFont(new Font("Tahoma", Font.PLAIN, 14));
        jTable1 = new javax.swing.JTable();
        table = new javax.swing.JTable();
        jButtonSave = new javax.swing.JButton();
        jButtonSave.setEnabled(false);
        jButtonDelete = new javax.swing.JButton();
        jButtonDelete.setEnabled(false);
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemCartas = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        GridBagLayout gbl_jPanel2 = new GridBagLayout();
        gbl_jPanel2.columnWidths = new int[] {75, 150};
        gbl_jPanel2.rowHeights = new int[] {20, 20, 20, 20, 20};
        gbl_jPanel2.columnWeights = new double[]{0.0, 0.0};
        gbl_jPanel2.rowWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
        jPanel2.setLayout(gbl_jPanel2);
        jTextFldCardName = new javax.swing.JTextField();
        jTextFldCardName.setHorizontalAlignment(SwingConstants.LEFT);
        jTextFldCardName.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                jTextFldCardName.setBackground(Color.white);
            }
        });
        jLabelCardName = new javax.swing.JLabel();

        jLabelCardName.setText("Nombre:");
        GridBagConstraints gbc_jLabelCardName = new GridBagConstraints();
        gbc_jLabelCardName.anchor = GridBagConstraints.WEST;
        gbc_jLabelCardName.insets = new Insets(0, 0, 5, 5);
        gbc_jLabelCardName.gridx = 0;
        gbc_jLabelCardName.gridy = 0;
        jPanel2.add(jLabelCardName, gbc_jLabelCardName);

        jTextFldCardName.setText("Eng name");
        GridBagConstraints gbc_jTextFldCardName = new GridBagConstraints();
        gbc_jTextFldCardName.fill = GridBagConstraints.HORIZONTAL;
        gbc_jTextFldCardName.insets = new Insets(0, 0, 5, 0);
        gbc_jTextFldCardName.gridx = 1;
        gbc_jTextFldCardName.gridy = 0;
        jPanel2.add(jTextFldCardName, gbc_jTextFldCardName);
        jLabelId = new javax.swing.JLabel();

        jLabelId.setText("ID:");
        GridBagConstraints gbc_jLabelId = new GridBagConstraints();
        gbc_jLabelId.anchor = GridBagConstraints.WEST;
        gbc_jLabelId.insets = new Insets(0, 0, 5, 5);
        gbc_jLabelId.gridx = 0;
        gbc_jLabelId.gridy = 1;
        jPanel2.add(jLabelId, gbc_jLabelId);
        jTextFldId = new javax.swing.JTextField();
        jTextFldId.setHorizontalAlignment(SwingConstants.LEFT);
        jTextFldId.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                jTextFldId.setBackground(Color.white);
            }
        });

        jTextFldId.setText("Spa name");
        GridBagConstraints gbc_jTextFldId = new GridBagConstraints();
        gbc_jTextFldId.fill = GridBagConstraints.HORIZONTAL;
        gbc_jTextFldId.insets = new Insets(0, 0, 5, 0);
        gbc_jTextFldId.gridx = 1;
        gbc_jTextFldId.gridy = 1;
        jPanel2.add(jTextFldId, gbc_jTextFldId);
        GridBagConstraints gbc_panel = new GridBagConstraints();
        gbc_panel.fill = GridBagConstraints.HORIZONTAL;
        gbc_panel.insets = new Insets(0, 0, 5, 0);
        gbc_panel.gridx = 1;
        gbc_panel.gridy = 2;
        jPanel2.add(panel, gbc_panel);
        panel.setLayout(new BoxLayout(panel, BoxLayout.X_AXIS));
        jButton1 = new javax.swing.JButton();
        jButton1.setMinimumSize(new Dimension(50, 9));
        panel.add(jButton1);

        jButton1.setText("Obtener Datos");
        jButton1.addActionListener(this::jButton1ActionPerformed);
        jLabelLevel = new javax.swing.JLabel();

        jLabelLevel.setText("Nivel/LINK:");
        GridBagConstraints gbc_jLabelLevel = new GridBagConstraints();
        gbc_jLabelLevel.anchor = GridBagConstraints.WEST;
        gbc_jLabelLevel.insets = new Insets(0, 0, 5, 5);
        gbc_jLabelLevel.gridx = 0;
        gbc_jLabelLevel.gridy = 3;
        jPanel2.add(jLabelLevel, gbc_jLabelLevel);
        jComboBoxLvl = new javax.swing.JComboBox<>();

        jComboBoxLvl.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "","1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        GridBagConstraints gbc_jComboBoxLvl = new GridBagConstraints();
        gbc_jComboBoxLvl.fill = GridBagConstraints.HORIZONTAL;
        gbc_jComboBoxLvl.insets = new Insets(0, 0, 5, 0);
        gbc_jComboBoxLvl.gridx = 1;
        gbc_jComboBoxLvl.gridy = 3;
        jPanel2.add(jComboBoxLvl, gbc_jComboBoxLvl);
        jLabelTcg = new javax.swing.JLabel();

        jLabelTcg.setText("TCG");
        GridBagConstraints gbc_jLabelTcg = new GridBagConstraints();
        gbc_jLabelTcg.anchor = GridBagConstraints.WEST;
        gbc_jLabelTcg.insets = new Insets(0, 0, 5, 5);
        gbc_jLabelTcg.gridx = 0;
        gbc_jLabelTcg.gridy = 4;
        jPanel2.add(jLabelTcg, gbc_jLabelTcg);

        chckbxDisponible = new JCheckBox("Disponible");
        GridBagConstraints gbc_chckbxDisponible = new GridBagConstraints();
        gbc_chckbxDisponible.insets = new Insets(0, 0, 5, 0);
        gbc_chckbxDisponible.gridx = 1;
        gbc_chckbxDisponible.gridy = 4;
        jPanel2.add(chckbxDisponible, gbc_chckbxDisponible);
        jLabelPrecio = new javax.swing.JLabel();

        jLabelPrecio.setText("Precio:");
        GridBagConstraints gbc_jLabelPrecio = new GridBagConstraints();
        gbc_jLabelPrecio.anchor = GridBagConstraints.WEST;
        gbc_jLabelPrecio.insets = new Insets(0, 0, 5, 5);
        gbc_jLabelPrecio.gridx = 0;
        gbc_jLabelPrecio.gridy = 5;
        jPanel2.add(jLabelPrecio, gbc_jLabelPrecio);

        jButtonAdd.setText("Add");
        jButtonAdd.addActionListener(this::jButtonAddActionPerformed);

        jButtonNew.setText("New");
        jButtonNew.addActionListener(this::jButtonNewActionPerformed);
        jButtonSaveEx.addActionListener(this::jButtonSaveExActionPerformed);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                },
                new String [] {
                        "Cartas"
                }
        ) {
            final boolean[] canEdit = new boolean [] {
                    false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setShowVerticalLines(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        table.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                },
                new String [] {
                        "Expansiones"
                }
        ) {
            final boolean[] canEdit = new boolean [] {
                    false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        table.setShowVerticalLines(false);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jButtonSave.setText("Save");
        jButtonSave.addActionListener(this::jButtonSaveActionPerformed);

        jButtonDelete.setBackground(new java.awt.Color(255, 102, 102));
        jButtonDelete.setFont(new java.awt.Font("Tahoma", Font.PLAIN, 18)); // NOI18N
        jButtonDelete.setText("X");
        jButtonDelete.setAlignmentY(0.0F);
        jButtonDelete.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButtonDelete.setBorderPainted(false);
        jButtonDelete.setContentAreaFilled(false);
        jButtonDelete.setOpaque(true);
        jButtonDelete.addActionListener(this::jButtonDeleteActionPerformed);

        jMenu1.setText("Config");
        jMenu1.setActionCommand("Ruta");

        jMenuItemCartas.setText("Cargar Cartas");
        jMenuItemCartas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });

        jMenuItemNew = new JMenuItem("New Base");
        jMenuItemNew.addActionListener(this::jMenuNewAction);
        jMenu1.add(jMenuItemNew);
        jMenu1.add(jMenuItemCartas);

        jMenuBar1.add(jMenu1);

        jMenuItemEx = new JMenuItem("Cargar Expansiones");
        jMenuItemEx.addActionListener(this::jMenuLoadExpAction);
        jMenu1.add(jMenuItemEx);
        jButtonAddEx.addActionListener(this::jButtonAddExActionPerformed);
        jButtonNew_1.addActionListener(this::jButtonNew_1ActionPerformed);
        btnDltCrdFrmExp.addActionListener(this::jBtnDltCrdFromExpActionPerformed);

        setJMenuBar(jMenuBar1);
        GroupLayout groupLayout = new GroupLayout(getContentPane());
        groupLayout.setHorizontalGroup(
                groupLayout.createParallelGroup(Alignment.LEADING)
                        .addGroup(groupLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
                                        .addGroup(groupLayout.createSequentialGroup()
                                                .addComponent(jButtonAdd)
                                                .addPreferredGap(ComponentPlacement.UNRELATED)
                                                .addComponent(jButtonSave)
                                                .addPreferredGap(ComponentPlacement.UNRELATED)
                                                .addComponent(jButtonNew)
                                                .addGap(28)
                                                .addComponent(jButtonDelete, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                                                .addComponent(btnAddCrdToExp))
                                        .addGroup(groupLayout.createSequentialGroup()
                                                .addGroup(groupLayout.createParallelGroup(Alignment.TRAILING)
                                                        .addComponent(jScrollPane2, Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                                                        .addComponent(jPanel2, Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 245, GroupLayout.PREFERRED_SIZE))
                                                .addGap(73)))
                                .addPreferredGap(ComponentPlacement.RELATED)
                                .addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
                                        .addGroup(groupLayout.createSequentialGroup()
                                                .addComponent(jButtonAddEx, GroupLayout.PREFERRED_SIZE, 51, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(ComponentPlacement.RELATED)
                                                .addComponent(jButtonSaveEx, GroupLayout.PREFERRED_SIZE, 57, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(ComponentPlacement.RELATED)
                                                .addComponent(jButtonNew_1, GroupLayout.PREFERRED_SIZE, 53, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(ComponentPlacement.RELATED)
                                                .addComponent(btnDeleteExp)
                                                .addGap(36))
                                        .addGroup(groupLayout.createSequentialGroup()
                                                .addGroup(groupLayout.createParallelGroup(Alignment.TRAILING)
                                                        .addComponent(jScrollPane2_1, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                                                        .addComponent(panel_1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(18)))
                                .addPreferredGap(ComponentPlacement.RELATED)
                                .addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
                                        .addComponent(btnDltCrdFrmExp)
                                        .addComponent(jScrollPane2_1_1, GroupLayout.PREFERRED_SIZE, 284, GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
        );
        btnDeleteExp.setEnabled(false);
        groupLayout.setVerticalGroup(
                groupLayout.createParallelGroup(Alignment.LEADING)
                        .addGroup(groupLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
                                        .addGroup(groupLayout.createSequentialGroup()
                                                .addComponent(btnDltCrdFrmExp)
                                                .addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jScrollPane2_1_1, GroupLayout.PREFERRED_SIZE, 365, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(ComponentPlacement.RELATED))
                                        .addGroup(groupLayout.createSequentialGroup()
                                                .addGroup(groupLayout.createParallelGroup(Alignment.TRAILING, false)
                                                        .addComponent(panel_1, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jPanel2, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(ComponentPlacement.RELATED)
                                                .addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
                                                        .addGroup(groupLayout.createSequentialGroup()
                                                                .addGroup(groupLayout.createParallelGroup(Alignment.LEADING)
                                                                        .addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)
                                                                                .addComponent(jButtonAdd)
                                                                                .addComponent(jButtonSave)
                                                                                .addComponent(jButtonNew))
                                                                        .addComponent(jButtonDelete))
                                                                .addPreferredGap(ComponentPlacement.RELATED)
                                                                .addComponent(jScrollPane2, GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                                                .addPreferredGap(ComponentPlacement.RELATED))
                                                        .addGroup(groupLayout.createSequentialGroup()
                                                                .addGroup(groupLayout.createParallelGroup(Alignment.BASELINE)
                                                                        .addComponent(jButtonAddEx)
                                                                        .addComponent(jButtonSaveEx)
                                                                        .addComponent(jButtonNew_1)
                                                                        .addComponent(btnDeleteExp)
                                                                        .addComponent(btnAddCrdToExp))
                                                                .addPreferredGap(ComponentPlacement.RELATED)
                                                                .addComponent(jScrollPane2_1, 0, 0, Short.MAX_VALUE)))))
                                .addGap(10))
        );
        btnDeleteExp.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                jButtonDeleteExpansionActionPerformed(e);
            }
        });

        table_1 = new JTable();
        table_1.setShowVerticalLines(false);
        table_1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2_1_1.setViewportView(table_1);
        table.setShowVerticalLines(false);
        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        jScrollPane2_1.setViewportView(table);
        jTextFldPrecio = new javax.swing.JTextField();

        btnAddCrdToExp.addActionListener(this::jBtnAddCrdToExpActionPerformed);

        jTextFldPrecio.setText("0");
        GridBagConstraints gbc_jTextFldPrecio = new GridBagConstraints();
        gbc_jTextFldPrecio.insets = new Insets(0, 0, 5, 0);
        gbc_jTextFldPrecio.fill = GridBagConstraints.HORIZONTAL;
        gbc_jTextFldPrecio.gridx = 1;
        gbc_jTextFldPrecio.gridy = 5;
        jPanel2.add(jTextFldPrecio, gbc_jTextFldPrecio);
        GridBagLayout gbl_panel_1 = new GridBagLayout();
        gbl_panel_1.columnWidths = new int[] {75, 200};
        gbl_panel_1.rowHeights = new int[] {20, 20, 60, 20, 20};
        gbl_panel_1.columnWeights = new double[]{0.0, 1.0};
        gbl_panel_1.rowWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0};
        gbl_panel_1.columnWeights = new double[]{Double.MIN_VALUE};
        gbl_panel_1.rowWeights = new double[]{Double.MIN_VALUE};
        panel_1.setLayout(gbl_panel_1);

        GridBagConstraints gbc_lblNewLabel = new GridBagConstraints();
        gbc_lblNewLabel.anchor = GridBagConstraints.EAST;
        gbc_lblNewLabel.insets = new Insets(0, 0, 5, 5);
        gbc_lblNewLabel.gridx = 0;
        gbc_lblNewLabel.gridy = 0;
        panel_1.add(lblNewLabel, gbc_lblNewLabel);

        jTxttFldNameEx = new JTextField();
        GridBagConstraints gbc_jTxttFldNameEx = new GridBagConstraints();
        gbc_jTxttFldNameEx.insets = new Insets(0, 0, 5, 0);
        gbc_jTxttFldNameEx.fill = GridBagConstraints.HORIZONTAL;
        gbc_jTxttFldNameEx.gridx = 1;
        gbc_jTxttFldNameEx.gridy = 0;
        panel_1.add(jTxttFldNameEx, gbc_jTxttFldNameEx);
        jTxttFldNameEx.setColumns(10);

        GridBagConstraints gbc_lblNewLabel_1 = new GridBagConstraints();
        gbc_lblNewLabel_1.anchor = GridBagConstraints.EAST;
        gbc_lblNewLabel_1.insets = new Insets(0, 0, 5, 5);
        gbc_lblNewLabel_1.gridx = 0;
        gbc_lblNewLabel_1.gridy = 1;
        panel_1.add(lblNewLabel_1, gbc_lblNewLabel_1);

        jTxtFldIDEx = new JTextField();
        GridBagConstraints gbc_jTxtFldIDEx = new GridBagConstraints();
        gbc_jTxtFldIDEx.insets = new Insets(0, 0, 5, 0);
        gbc_jTxtFldIDEx.fill = GridBagConstraints.HORIZONTAL;
        gbc_jTxtFldIDEx.gridx = 1;
        gbc_jTxtFldIDEx.gridy = 1;
        panel_1.add(jTxtFldIDEx, gbc_jTxtFldIDEx);
        jTxtFldIDEx.setColumns(10);

        GridBagConstraints gbc_lblNewLabel_2 = new GridBagConstraints();
        gbc_lblNewLabel_2.fill = GridBagConstraints.VERTICAL;
        gbc_lblNewLabel_2.insets = new Insets(0, 0, 5, 5);
        gbc_lblNewLabel_2.gridx = 0;
        gbc_lblNewLabel_2.gridy = 2;
        panel_1.add(lblNewLabel_2, gbc_lblNewLabel_2);

        GridBagConstraints gbc_lblNewLabel_3 = new GridBagConstraints();
        gbc_lblNewLabel_3.anchor = GridBagConstraints.EAST;
        gbc_lblNewLabel_3.insets = new Insets(0, 0, 5, 5);
        gbc_lblNewLabel_3.gridx = 0;
        gbc_lblNewLabel_3.gridy = 3;
        panel_1.add(lblNewLabel_3, gbc_lblNewLabel_3);

        GridBagConstraints gbc_jDatePicker = new GridBagConstraints();
        gbc_jDatePicker.insets = new Insets(0, 0, 5, 0);
        gbc_jDatePicker.fill = GridBagConstraints.HORIZONTAL;
        gbc_jDatePicker.gridx = 1;
        gbc_jDatePicker.gridy = 2;
        panel_1.add(jDatePick, gbc_jDatePicker);

        jTxtFldPrice = new JTextField();
        GridBagConstraints gbc_jTxtFldPrice = new GridBagConstraints();
        gbc_jTxtFldPrice.insets = new Insets(0, 0, 5, 0);
        gbc_jTxtFldPrice.fill = GridBagConstraints.HORIZONTAL;
        gbc_jTxtFldPrice.gridx = 1;
        gbc_jTxtFldPrice.gridy = 3;
        panel_1.add(jTxtFldPrice, gbc_jTxtFldPrice);
        jTxtFldPrice.setColumns(10);

        GridBagConstraints gbc_lblNewLabel_4 = new GridBagConstraints();
        gbc_lblNewLabel_4.insets = new Insets(0, 0, 0, 5);
        gbc_lblNewLabel_4.gridx = 0;
        gbc_lblNewLabel_4.gridy = 4;
        panel_1.add(lblNewLabel_4, gbc_lblNewLabel_4);

        GridBagConstraints gbc_chckbxNewCheckBox = new GridBagConstraints();
        gbc_chckbxNewCheckBox.gridx = 1;
        gbc_chckbxNewCheckBox.gridy = 4;
        chckbxNewCheckBox.setHorizontalAlignment(SwingConstants.LEFT);
        panel_1.add(chckbxNewCheckBox, gbc_chckbxNewCheckBox);
        getContentPane().setLayout(groupLayout);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        if(fl.addCard(jTextFldCardName.getText(),
                jTextFldId.getText(),
                Integer.parseInt((String) jComboBoxLvl.getSelectedItem()),
                chckbxDisponible.isSelected(),
                Double.parseDouble(jTextFldPrecio.getText()))==0){
            fl.writeFileCards(fl.getCartas());
            JOptionPane.showMessageDialog(this,"Añadida con éxito");
            jTable1.setModel(tableModel(fl.getCardsKeys(),"Expansiones"));
        }else{
            JOptionPane.showMessageDialog(this,"La carta ya está registrada");
        }

    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonAddExActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerforme
        LocalDate date = LocalDate.of(jDatePick.getModel().getYear(),jDatePick.getModel().getMonth()+1,jDatePick.getModel().getDay());
        if(fl.addExpansion(jTxttFldNameEx.getText(),
                jTxtFldIDEx.getText(),
                date,
                Double.parseDouble(jTxtFldPrice.getText()),
                chckbxNewCheckBox.isSelected())==0){
            fl.writeFileExpansions(fl.getExpansiones());
            JOptionPane.showMessageDialog(this,"Añadida con éxito");
            table.setModel(tableModel(fl.getExpKeys(),"Expansiones"));
        }else{
            JOptionPane.showMessageDialog(this,"La carta ya está registrada");
        }

    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        fl.setRutaCartas(this.loadChooser(this, ".cards"));
        fl.readFile(fl.getRutaCartas());
        jTable1.setModel(tableModel(fl.getCardsKeys(),"Cartas"));

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuNewAction(ActionEvent evt) {
        saveChooser(this);
        fl.readFile(fl.getRutaCartas());
        fl.readFileExpansiones(fl.getRutaExpansiones());
        jTable1.setModel(tableModel(fl.getCardsKeys(),"Cartas"));
        table.setModel(tableModel(fl.getExpKeys(),"Expansiones"));

    }

    private void jMenuLoadExpAction(ActionEvent evt) {
        fl.setRutaExpansiones(this.loadChooser(this,".expansiones"));
        fl.readFileExpansiones(fl.getRutaExpansiones());
        table.setModel(tableModel(fl.getExpKeys(),"Expansiones"));
    }

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            evt.consume();
            String nameCard = (String) jTable1.getValueAt(jTable1.getSelectedRow(),0);
            oldCardName = nameCard;
            List<Object> lista = (List<Object>) fl.readCard(nameCard);
            jTextFldCardName.setText((String) lista.get(0));
            jTextFldId.setText((String) lista.get(1));
            jComboBoxLvl.setSelectedItem(lista.get(2)+"");
            chckbxDisponible.setSelected((Boolean) lista.get(3));
            jTextFldPrecio.setText(lista.get(4)+"");
            desactivar(new Object[]{jButtonSave,jButtonNew,jButtonDelete},true);
            jButtonAdd.setEnabled(false);
        }


    }//GEN-LAST:event_jTable1MouseClicked

    public Date convertToDateViaInstant(LocalDate dateToConvert) {
        return java.util.Date.from(dateToConvert.atStartOfDay()
                .atZone(ZoneId.systemDefault())
                .toInstant());
    }

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        if (evt.getClickCount() == 2 && !evt.isConsumed()) {
            evt.consume();
            String nameExpansion = (String) table.getValueAt(table.getSelectedRow(),0);
            List<Object> lista = (List<Object>) fl.readExp(nameExpansion);
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(convertToDateViaInstant((LocalDate) lista.get(2)) );
            DateModel<Calendar> dateModel = (DateModel<Calendar>) jDatePick.getModel();
            dateModel.setValue(calendar);
            jTxttFldNameEx.setText((String) lista.get(0));
            jTxtFldIDEx.setText((String) lista.get(1));
            chckbxNewCheckBox.setSelected((Boolean) lista.get(3));
            jTxtFldPrice.setText(lista.get(4)+"");
            oldExpansionName= (String) table.getValueAt(table.getSelectedRow(),0);
            table_1.setModel(tableModel((List) lista.get(5),"Cartas en "+oldExpansionName));
            desactivar(new Object[]{jButtonSaveEx,jButtonNew_1,btnDeleteExp,btnDltCrdFrmExp},true);
            jButtonAddEx.setEnabled(false);
        }


    }//GEN-LAST:event_jTable1MouseClicked

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerfors
        fl.updateCard(oldCardName,jTextFldCardName.getText(),
                jTextFldId.getText(),
                Integer.parseInt((String)jComboBoxLvl.getSelectedItem()),
                chckbxDisponible.isSelected(),
                Double.parseDouble(jTextFldPrecio.getText())
        );
        fl.writeFileCards(fl.getCartas());
        JOptionPane.showMessageDialog(this,"Carta actualizada con éxito");
        jTable1.setModel(tableModel(fl.getCardsKeys(),"Expansiones"));
        oldCardName=jTextFldCardName.getText();

    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonSaveExActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerfors
        LocalDate date = LocalDate.of(jDatePick.getModel().getYear(),jDatePick.getModel().getMonth(),jDatePick.getModel().getDay());
        fl.updateExpansion(oldExpansionName,jTxttFldNameEx.getText(),
                jTxtFldIDEx.getText(),
                date,
                Double.parseDouble(jTextFldPrecio.getText()),
                        chckbxDisponible.isSelected(),
                (List<String>) fl.readExp(oldCardName).get(5)
        );
        fl.writeFileExpansions(fl.getExpansiones());
        JOptionPane.showMessageDialog(this,"Expansion actualizada con éxito");
        oldExpansionName= jTxttFldNameEx.getText();
        table.setModel(tableModel(fl.getExpKeys(),"Expansiones"));
        table_1.setModel(tableModel((List) fl.readExp(oldExpansionName).get(5),"Cartas en "+oldExpansionName));

    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewActionPerformed
        jTextFldCardName.setText("");
        jTextFldId.setText("");
        jComboBoxLvl.setSelectedIndex(0);
        jTextFldPrecio.setText("");
        desactivar(new Object[]{jButtonDelete,jButtonNew, jButtonSave},false);
        jButtonAdd.setEnabled(true);
    }//GEN-LAST:event_jButtonNewActionPerformed

    private void jButtonNew_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewActionPerformed
        jTxttFldNameEx.setText("");
        jTxtFldIDEx.setText("");
        jTxtFldPrice.setText("");
        desactivar(new Object[]{btnDeleteExp,btnDltCrdFrmExp, jButtonNew_1, jButtonSaveEx},false);
        jButtonAddEx.setEnabled(true);
    }//GEN-LAST:event_jButtonNewActionPerformed

    private void jBtnDltCrdFromExpActionPerformed (java.awt.event.ActionEvent evt){
        ArrayList<String> oldExp = (ArrayList<String>) fl.readExp(oldExpansionName).get(5);
        oldExp.remove(table_1.getValueAt(table_1.getSelectedRow(),0));
        fl.updateExpansion(oldExpansionName,oldExpansionName,
                (String) fl.readExp(oldExpansionName).get(1),
                (LocalDate) fl.readExp(oldExpansionName).get(2),
                (Double) fl.readExp(oldExpansionName).get(4),
                (Boolean) fl.readExp(oldExpansionName).get(3),
                oldExp);
        fl.writeFileExpansions(fl.getExpansiones());
        table_1.setModel(tableModel((List) fl.readExp(oldExpansionName).get(5),"Cartas en "+oldExpansionName));
    }

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        fl.deleteCardFromAll((String) jTable1.getValueAt(jTable1.getSelectedRow(),0));
        fl.deleteCard((String) jTable1.getValueAt(jTable1.getSelectedRow(),0));
        jButtonNewActionPerformed(evt);
        fl.writeFileCards(fl.getCartas());
        fl.writeFileExpansions(fl.getExpansiones());
        JOptionPane.showMessageDialog(this,"Eliminada");
        jTable1.setModel(tableModel(fl.getCardsKeys(),"Expansiones"));
        table_1.setModel(tableModel((List) fl.readExp(oldExpansionName).get(5),"Cartas en "+oldExpansionName));
        jButtonNewActionPerformed(evt);


    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonDeleteExpansionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed

        fl.deleteExpansion((String) table.getValueAt(table.getSelectedRow(),0));
        jButtonNewActionPerformed(evt);
        fl.writeFileExpansions(fl.getExpansiones());
        JOptionPane.showMessageDialog(this,"Eliminada");
        table.setModel(tableModel(fl.getExpKeys(),"Expansiones"));
        jButtonNew_1ActionPerformed(evt);

    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jBtnAddCrdToExpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerforme
        LocalDate date = LocalDate.of(jDatePick.getModel().getYear(),jDatePick.getModel().getMonth()+1,jDatePick.getModel().getDay());
        ArrayList<String> li = (ArrayList<String>) fl.readExp(oldExpansionName).get(5);
        if (li.contains(oldCardName)){
            JOptionPane.showMessageDialog(this,"La carta ya esta agregada");
        }else{
            li.add(oldCardName);
            fl.updateExpansion(oldExpansionName,jTxttFldNameEx.getText(),
                    jTxtFldIDEx.getText(),date,
                    Double.parseDouble(jTxtFldPrice.getText()),chckbxNewCheckBox.isSelected(),
                    li);
            fl.writeFileExpansions(fl.getExpansiones());
            JOptionPane.showMessageDialog(this,"Añadida con éxito");
            fl.readFileExpansiones(fl.getRutaExpansiones());
            table.setModel(tableModel(fl.getExpKeys(),"Expansiones"));
            table_1.setModel(tableModel((List) fl.readExp(oldExpansionName).get(5),"Cartas en"+oldExpansionName));

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /*t
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    private void desactivar(Object jCampos[],boolean enabled) {
        for (Object object : jCampos) {
            switch (object.getClass().toString()) {
                case "class javax.swing.JTextArea":
                    ((JTextArea)object).setEditable(enabled);
                    break;

                case "class javax.swing.JTextField":
                    ((JTextField)object).setEditable(enabled);
                    break;

                case "class javax.swing.JComboBox":
                    ((JComboBox)object).setEnabled(enabled);
                    break;

                case "class javax.swing.JButton":
                    ((JButton)object).setEnabled(enabled);
                    break;

                default:
                    break;
            }
        }
    }

    private TableModel tableModel(List listaDeKeys,String nameColumn){
        DefaultTableModel tableModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tableModel.addColumn(nameColumn, listaDeKeys.toArray());
        return tableModel;
    }

    public void saveChooser(Component parent) {
        String ruta = "";
        JFileChooser jFileCh = new JFileChooser("user.home");
        jFileCh.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int userSelection = jFileCh.showSaveDialog(parent);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            try {
                ruta = jFileCh.getSelectedFile().getAbsolutePath();
                System.out.println(ruta);
                FileWriter fw = new FileWriter(ruta+"\\datos.cards");
                FileWriter fw2 = new FileWriter(ruta+"\\datos.expansiones");
                fl.setRutaCartas(ruta+"\\datos.cards");
                fl.setRutaExpansiones(ruta+"\\datos.expansiones");
                fw.close();
                fw2.close();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }
    public String loadChooser(Component parent, String tipo) {
        String ruta = "";
        JFileChooser jFileCh = new JFileChooser();
        jFileCh.setFileFilter(filtroParaFChoser(tipo));
        int result = jFileCh.showOpenDialog(parent);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = jFileCh.getSelectedFile();
            ruta = selectedFile.getAbsolutePath();
        }
        return  ruta;
    }

    private static FileFilter filtroParaFChoser(String tipo){
        return new FileFilter() {
            @Override
            public boolean accept(File f) {
                if (f.isDirectory()) {
                    return true;
                } else {
                    return f.getName().toLowerCase().endsWith(tipo);
                }
            }
            @Override
            public String getDescription() {
                return tipo.toUpperCase()+" files (*"+tipo+")";
            }
        };
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonNew;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JComboBox<String> jComboBoxLvl;
    private javax.swing.JLabel jLabelPrecio;
    private javax.swing.JLabel jLabelCardName;
    private javax.swing.JLabel jLabelLevel;
    private javax.swing.JLabel jLabelId;
    private javax.swing.JLabel jLabelTcg;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemCartas;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFldPrecio;
    private javax.swing.JTextField jTextFldCardName;
    private javax.swing.JTextField jTextFldId;
    private JMenuItem jMenuItemNew;
    private final JPanel panel = new JPanel();
    private JCheckBox chckbxDisponible;
    private final JPanel panel_1 = new JPanel();
    private final JButton btnAddCrdToExp = new JButton("Add ->");
    private final JLabel lblNewLabel = new JLabel("Nombre:");
    private final JLabel lblNewLabel_1 = new JLabel("ID:");
    private final JLabel lblNewLabel_2 = new JLabel("Fecha de Salida:");
    private final JLabel lblNewLabel_3 = new JLabel("Precio:");
    private final JLabel lblNewLabel_4 = new JLabel("Disponible TCG:");
    private JTextField jTxttFldNameEx;
    private JTextField jTxtFldIDEx;
    private JTextField jTxtFldPrice;
    private final JCheckBox chckbxNewCheckBox = new JCheckBox("");
    private final JButton jButtonAddEx = new JButton();
    private final JButton jButtonSaveEx = new JButton();
    private final JButton jButtonNew_1 = new JButton();
    private JDatePicker jDatePick = new JDatePicker();
    private final JScrollPane jScrollPane2_1 = new JScrollPane();
    private JTable table;
    private final JScrollPane jScrollPane2_1_1 = new JScrollPane();
    private JMenuItem jMenuItemEx;
    private final JButton btnDltCrdFrmExp = new JButton("Quitar Carta");
    private JTable table_1;
    private final JButton btnDeleteExp = new JButton("Borrar Exp");
}
